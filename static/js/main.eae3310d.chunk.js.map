{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","hasTabId","some","el","id","correctSelectedTabId","className","find","title","map","tab","href","onClick","event","preventDefault","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EAAWH,EAAKI,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAOJ,KACvCK,EAAuBL,EAM3B,OAJKC,IACHI,EAAuBP,EAAK,GAAGM,IAI/B,qCACE,qBAAIE,UAAU,QAAd,4BAEG,IACAR,EAAKS,MAAK,SAAAJ,GAAE,OAAIA,EAAGC,KAAOC,KAAsBG,SAGnD,sBAAK,UAAQ,gBAAb,UACE,qBAAKF,UAAU,gBAAf,SACE,6BAEIR,EAAKW,KAAI,SAAAC,GAAG,OACV,oBACEJ,UAAWD,IAAyBK,EAAIN,GAAK,YAAc,GAC3D,UAAQ,MAFV,SAKE,mBACEO,KAAI,WAAMD,EAAIN,IACd,UAAQ,UACRQ,QAAS,SAACC,GACRA,EAAMC,iBACFJ,EAAIN,KAAOC,GACbN,EAAcW,IANpB,SAUGA,EAAIF,SAZFE,EAAIN,WAmBnB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGR,EAAKS,MAAK,SAAAJ,GAAE,OAAIA,EAAGC,KAAOC,KAAsBU,iBCtC9CjB,EAAO,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASO,QAAS,eACxC,CAAEX,GAAI,QAASI,MAAO,QAASO,QAAS,eACxC,CAAEX,GAAI,QAASI,MAAO,QAASO,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOjB,EAAP,KAAsBkB,EAAtB,KAEA,OACE,qBAAKZ,UAAU,UAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,cAAe,SAAAW,GAAG,OAAIQ,EAAiBR,EAAIN,KAC3CJ,cAAeA,OCjBvBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eae3310d.chunk.js","sourcesContent":["export const Tabs = ({ tabs, onTabSelected, selectedTabId }) => {\n  const hasTabId = tabs.some(el => el.id === selectedTabId);\n  let correctSelectedTabId = selectedTabId;\n\n  if (!hasTabId) {\n    correctSelectedTabId = tabs[0].id;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(el => el.id === correctSelectedTabId).title}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {\n              tabs.map(tab => (\n                <li\n                  className={correctSelectedTabId === tab.id ? 'is-active' : ''}\n                  data-cy=\"Tab\"\n                  key={tab.id}\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      if (tab.id !== correctSelectedTabId) {\n                        onTabSelected(tab);\n                      }\n                    }}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabs.find(el => el.id === correctSelectedTabId).content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        onTabSelected={tab => setSelectedTabId(tab.id)}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}